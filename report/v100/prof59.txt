188.040275
==4100== NVPROF is profiling process 4100, command: ./a.out 5 9
==4100== Profiling application: ./a.out 5 9
==4100== Profiling result:
            Type  Time(%)      Time     Calls       Avg       Min       Max  Name
 GPU activities:   47.52%  66.3613s    210000  316.01us  279.01us  600.99us  reduce(point**, point**, int*, int)
                   27.55%  38.4721s    210001  183.20us  172.16us  365.73us  sieve(int, int, int*, int**, int**, point*, point)
                    3.37%  4.70831s    210000  22.420us  12.384us  2.8835ms  d_fluid_colloid_collision(int*, point*, point*, point*, point*, point*, double, double, double, double, point*, point, double, int, double, int**, point**, point**, curandStateXORWOW*)
                    3.22%  4.50101s    210001  21.433us  20.064us  4.2709ms  d_boxpart(int**, int*, int, point*, point)
                    3.03%  4.23433s    210000  20.163us  15.328us  261.98us  d_update_pos_mpcd(point*, point*, double, point, int)
                    2.47%  3.44507s     21000  164.05us  18.080us  615.45us  d_nbrc(point*, point*, point*, point*, point, int*, int**, int**, int*, int, double, double)
                    2.06%  2.87737s    210000  13.701us  12.640us  514.81us  d_dump(point*, point*, double*, int)
                    1.14%  1.58750s    210001  7.5590us  6.8480us  287.62us  d_neighbour_list_mpcd(int**, int*, int**, int**, int*, int**, point*, point*, int, int, int, point)
                    1.09%  1.52272s     21000  72.510us  68.671us  77.119us  d_velfl(point*, point*, int**, int*, point**, point)
                    1.02%  1.42710s    210001  6.7950us  5.1510us  18.144us  d_compute_force_md(point*, int*, int**, point*, double, double, double, double, double, double, double, double*, point, int)
                    0.97%  1.35989s     21000  64.756us  54.272us  80.672us  d_velc(point*, point*, int**, int*, int, double, double, double)
                    0.73%  1.01975s    210000  4.8550us  4.6720us  19.904us  d_update_activity_direction(point*, point*, double, int)
                    0.72%  1.01149s     21000  48.166us  45.824us  51.903us  d_rotate(int*, int**, point*, point*, point, double, double)
                    0.69%  961.01ms    210000  4.5760us  3.0710us  12.448us  update_fcc(point**, point**, point*, point*, int*, int, double, double, double)
                    0.62%  867.05ms    463002  1.8720us  1.1190us  185.82us  imemset(int*, int)
                    0.61%  852.91ms    210000  4.0610us  3.8710us  18.944us  d_update_pos_md(point*, point*, point*, point*, double, double, point, int)
                    0.55%  764.93ms     21000  36.425us  34.336us  284.19us  d_cellvel(point*, point*, int**, int*, point)
                    0.50%  702.10ms     21000  33.433us  31.200us  38.272us  d_rotate_mat(point*, point*, point*, point**, int*, int**, int, point, double, double, curandStateXORWOW*)
                    0.46%  639.66ms    210000  3.0450us  2.9750us  12.320us  d_update_vel_colloid(point*, point*, point*, double, double, int)
                    0.41%  576.13ms    210001  2.7430us  2.5910us  19.296us  d_neighbour_list_md(int**, int*, point*, int, double, point)
                    0.40%  560.02ms     21000  26.667us  24.000us  539.33us  d_cellpart(int**, int*, int, point*, point, point)
                    0.17%  237.32ms     21001  11.300us  8.8640us  14.432us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point*, int, add_point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_point>, point*)
                    0.16%  221.92ms    105001  2.1130us  1.6640us  5.5360us  [CUDA memcpy DtoH]
                    0.13%  183.46ms     42001  4.3680us  2.9760us  5.2160us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, thrust::detail::normal_iterator<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_point, point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point)
                    0.12%  164.86ms     21000  7.8500us  5.6960us  10.592us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, double*, int, add_double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_double>, double)
                    0.08%  105.97ms     42000  2.5230us  1.6950us  3.8720us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double, point*)
                    0.04%  60.136ms     21000  2.8630us  2.7510us  3.4240us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, double)
                    0.04%  58.964ms     42001  1.4030us  1.0230us  3.8720us  void thrust::cuda_cub::core::_kernel_agent<thrust::cuda_cub::__parallel_for::ParallelForAgent<thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>, thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>(thrust::cuda_cub::par_t, thrust::use_default)
                    0.04%  56.111ms     11000  5.1000us  4.8000us  341.06us  calc_upd(int, int*, int*, point**, point**, point*)
                    0.03%  47.592ms     21000  2.2660us  2.0160us  4.4480us  set_rr(point*, curandStateXORWOW*)
                    0.03%  43.107ms     11000  3.9180us  3.6160us  15.775us  helper_upd(int, int*, int*, int*, point**, point**, int**, point*, point*, point*, point*, point, double)
                    0.01%  19.287ms         1  19.287ms  19.287ms  19.287ms  d_create_box(int**, point)
                    0.01%  8.8614ms         1  8.8614ms  8.8614ms  8.8614ms  curand_setup(curandStateXORWOW*, int)
                    0.00%  1.1683ms         1  1.1683ms  1.1683ms  1.1683ms  d_initialize_fluid(point*, point*, point*, int, int, double, double, double, point, curandStateXORWOW*)
                    0.00%  224.35us         1  224.35us  224.35us  224.35us  initialize_colloid(point*, point*, point*, int, double, double, double, double, double, point, curandStateXORWOW*)
                    0.00%  13.888us         1  13.888us  13.888us  13.888us  conserv_mom(point*, point, int)
                    0.00%  4.2240us         1  4.2240us  4.2240us  4.2240us  d_tumble(point*, point*, point, int, curandStateXORWOW*)
      API calls:   44.46%  86.6047s    147002  589.14us  5.8380us  24.080ms  cudaDeviceSynchronize
                   23.73%  46.2172s   3572016  12.938us  5.1870us  107.21ms  cudaLaunch
                   13.89%  27.0496s    210002  128.81us  9.8240us  20.279ms  cudaMalloc
                    9.21%  17.9445s    210002  85.449us  9.5580us  4.6843ms  cudaFree
                    4.07%  7.92058s  24781093     319ns     127ns  11.016ms  cudaSetupArgument
                    1.55%  3.02322s    105001  28.792us  19.679us  83.093ms  cudaMemcpyAsync
                    0.92%  1.79542s     95798  18.741us  6.2390us  202.68ms  cudaMallocManaged
                    0.90%  1.75442s    252003  6.9610us  2.6760us  7.8820ms  cudaFuncGetAttributes
                    0.71%  1.38549s   3572016     387ns     138ns  8.2456ms  cudaConfigureCall
                    0.27%  526.61ms    105001  5.0150us  2.9370us  1.0019ms  cudaStreamSynchronize
                    0.08%  153.30ms     84002  1.8240us     718ns  55.968us  cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
                    0.07%  137.98ms    126003  1.0950us     386ns  791.34us  cudaGetDevice
                    0.07%  132.78ms    126003  1.0530us     397ns  1.1887ms  cudaDeviceGetAttribute
                    0.05%  100.50ms    231004     435ns     126ns  753.49us  cudaPeekAtLastError
                    0.02%  43.186ms    105001     411ns     182ns  47.969us  cudaGetLastError
                    0.00%  390.84us        94  4.1570us     177ns  237.52us  cuDeviceGetAttribute
                    0.00%  177.16us         1  177.16us  177.16us  177.16us  cuDeviceTotalMem
                    0.00%  20.522us         1  20.522us  20.522us  20.522us  cuDeviceGetName
                    0.00%  2.4780us         3     826ns     191ns  1.6940us  cuDeviceGetCount
                    0.00%  1.2990us         2     649ns     322ns     977ns  cuDeviceGet

==4100== Unified Memory profiling result:
Device "Tesla V100-SXM2-16GB (0)"
   Count  Avg Size  Min Size  Max Size  Total Size  Total Time  Name
   21099  4.1299KB  4.0000KB  256.00KB  85.09766MB  86.37338ms  Host To Device
   21031  4.0820KB  4.0000KB  60.000KB  83.84766MB  49.46482ms  Device To Host
   21135         -         -         -           -   3.273317s  Gpu page fault groups
      67  4.0000KB  4.0000KB  4.0000KB  268.0000KB           -  Memory thrashes
Total CPU Page faults: 21010
Total CPU thrashes: 67
==4100== Warning: Some profiling data are not recorded. Make sure cudaProfilerStop() or cuProfilerStop() is called before application exit to flush profile data.
