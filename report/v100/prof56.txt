170.124517
==3867== NVPROF is profiling process 3867, command: ./a.out 5 6
==3867== Profiling application: ./a.out 5 6
==3867== Profiling result:
            Type  Time(%)      Time     Calls       Avg       Min       Max  Name
 GPU activities:   44.28%  55.0716s    210000  262.25us  249.44us  525.18us  reduce(point**, point**, int*, int)
                   29.03%  36.1019s    210001  171.91us  162.30us  182.59us  sieve(int, int, int*, int**, int**, point*, point)
                    3.59%  4.45920s    210001  21.234us  19.551us  3.9908ms  d_boxpart(int**, int*, int, point*, point)
                    3.46%  4.30491s    210000  20.499us  9.0240us  968.80us  d_fluid_colloid_collision(int*, point*, point*, point*, point*, point*, double, double, double, double, point*, point, double, int, double, int**, point**, point**, curandStateXORWOW*)
                    3.27%  4.07272s    210000  19.393us  14.912us  514.53us  d_update_pos_mpcd(point*, point*, double, point, int)
                    2.72%  3.38817s     21000  161.34us  12.704us  2.3920ms  d_nbrc(point*, point*, point*, point*, point, int*, int**, int**, int*, int, double, double)
                    2.38%  2.95465s    210000  14.069us  12.704us  405.69us  d_dump(point*, point*, double*, int)
                    1.23%  1.53120s     21000  72.914us  69.632us  78.240us  d_velfl(point*, point*, int**, int*, point**, point)
                    1.03%  1.27885s    210001  6.0890us  5.5360us  176.26us  d_neighbour_list_mpcd(int**, int*, int**, int**, int*, int**, point*, point*, int, int, int, point)
                    1.01%  1.25426s     21000  59.726us  48.224us  77.439us  d_velc(point*, point*, int**, int*, int, double, double, double)
                    0.85%  1.06330s    210001  5.0630us  3.5840us  17.664us  d_compute_force_md(point*, int*, int**, point*, double, double, double, double, double, double, double, double*, point, int)
                    0.82%  1.01847s    210000  4.8490us  4.6400us  20.800us  d_update_activity_direction(point*, point*, double, int)
                    0.81%  1.01117s     21000  48.150us  46.080us  52.575us  d_rotate(int*, int**, point*, point*, point, double, double)
                    0.76%  939.30ms    210000  4.4720us  3.0390us  15.232us  update_fcc(point**, point**, point*, point*, int*, int, double, double, double)
                    0.67%  831.55ms    210000  3.9590us  3.8080us  19.136us  d_update_pos_md(point*, point*, point*, point*, double, double, point, int)
                    0.61%  764.30ms     21000  36.395us  34.432us  227.23us  d_cellvel(point*, point*, int**, int*, point)
                    0.58%  724.74ms    463002  1.5650us  1.0560us  1.9691ms  imemset(int*, int)
                    0.56%  696.33ms     21000  33.158us  30.976us  37.536us  d_rotate_mat(point*, point*, point*, point**, int*, int**, int, point, double, double, curandStateXORWOW*)
                    0.52%  648.00ms    210000  3.0850us  2.9750us  20.160us  d_update_vel_colloid(point*, point*, point*, double, double, int)
                    0.46%  570.04ms     21000  27.144us  24.735us  468.96us  d_cellpart(int**, int*, int, point*, point, point)
                    0.43%  536.44ms    210001  2.5540us  2.4320us  18.208us  d_neighbour_list_md(int**, int*, point*, int, double, point)
                    0.19%  231.53ms     21001  11.024us  8.8640us  14.432us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point*, int, add_point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_point>, point*)
                    0.15%  190.28ms    105001  1.8120us  1.6640us  3.6160us  [CUDA memcpy DtoH]
                    0.14%  177.23ms     42001  4.2190us  2.9120us  4.8960us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, thrust::detail::normal_iterator<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_point, point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point)
                    0.13%  164.92ms     21000  7.8530us  5.6640us  10.976us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, double*, int, add_double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_double>, double)
                    0.08%  103.83ms     42000  2.4720us  1.6950us  3.4880us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double, point*)
                    0.05%  59.998ms     21000  2.8570us  2.7520us  3.1040us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, double)
                    0.04%  53.875ms     11000  4.8970us  4.7030us  154.82us  calc_upd(int, int*, int*, point**, point**, point*)
                    0.04%  45.923ms     21000  2.1860us  1.9840us  2.7200us  set_rr(point*, curandStateXORWOW*)
                    0.04%  45.283ms     42001  1.0780us     896ns  2.4640us  void thrust::cuda_cub::core::_kernel_agent<thrust::cuda_cub::__parallel_for::ParallelForAgent<thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>, thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>(thrust::cuda_cub::par_t, thrust::use_default)
                    0.03%  42.545ms     11000  3.8670us  3.5840us  4.2240us  helper_upd(int, int*, int*, int*, point**, point**, int**, point*, point*, point*, point*, point, double)
                    0.01%  16.340ms         1  16.340ms  16.340ms  16.340ms  d_create_box(int**, point)
                    0.01%  8.7968ms         1  8.7968ms  8.7968ms  8.7968ms  curand_setup(curandStateXORWOW*, int)
                    0.00%  990.65us         1  990.65us  990.65us  990.65us  d_initialize_fluid(point*, point*, point*, int, int, double, double, double, point, curandStateXORWOW*)
                    0.00%  178.05us         1  178.05us  178.05us  178.05us  initialize_colloid(point*, point*, point*, int, double, double, double, double, double, point, curandStateXORWOW*)
                    0.00%  14.975us         1  14.975us  14.975us  14.975us  conserv_mom(point*, point, int)
                    0.00%  3.9680us         1  3.9680us  3.9680us  3.9680us  d_tumble(point*, point*, point, int, curandStateXORWOW*)
      API calls:   39.01%  69.6980s    147002  474.13us  6.0520us  22.440ms  cudaDeviceSynchronize
                   26.59%  47.5116s   3572016  13.301us  5.5490us  12.569ms  cudaLaunch
                   14.91%  26.6358s    210002  126.84us  10.014us  4.9466ms  cudaMalloc
                    9.88%  17.6612s    210002  84.100us  9.6800us  10.199ms  cudaFree
                    4.49%  8.02097s  24781093     323ns     127ns  8.3670ms  cudaSetupArgument
                    1.64%  2.93382s    105001  27.940us  19.419us  83.599ms  cudaMemcpyAsync
                    1.00%  1.78234s     95780  18.608us  6.2700us  203.49ms  cudaMallocManaged
                    0.99%  1.76971s    252003  7.0220us  2.6780us  10.136ms  cudaFuncGetAttributes
                    0.87%  1.54833s   3572016     433ns     152ns  1.3493ms  cudaConfigureCall
                    0.30%  539.22ms    105001  5.1350us  3.0580us  776.16us  cudaStreamSynchronize
                    0.09%  157.65ms     84002  1.8760us     755ns  1.9963ms  cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
                    0.08%  135.74ms    126003  1.0770us     380ns  581.99us  cudaGetDevice
                    0.08%  135.05ms    126003  1.0710us     422ns  178.53us  cudaDeviceGetAttribute
                    0.06%  109.99ms    231004     476ns     127ns  780.61us  cudaPeekAtLastError
                    0.02%  44.322ms    105001     422ns     175ns  174.59us  cudaGetLastError
                    0.00%  396.31us        94  4.2160us     177ns  244.74us  cuDeviceGetAttribute
                    0.00%  168.28us         1  168.28us  168.28us  168.28us  cuDeviceTotalMem
                    0.00%  20.867us         1  20.867us  20.867us  20.867us  cuDeviceGetName
                    0.00%  2.2320us         3     744ns     232ns  1.4110us  cuDeviceGetCount
                    0.00%  1.3530us         2     676ns     372ns     981ns  cuDeviceGet

==3867== Unified Memory profiling result:
Device "Tesla V100-SXM2-16GB (0)"
   Count  Avg Size  Min Size  Max Size  Total Size  Total Time  Name
   21076  4.1055KB  4.0000KB  256.00KB  84.51172MB  76.02014ms  Host To Device
   21021  4.0557KB  4.0000KB  60.000KB  83.26172MB  42.54524ms  Device To Host
   21130         -         -         -           -   3.256057s  Gpu page fault groups
      80  4.0000KB  4.0000KB  4.0000KB  320.0000KB           -  Memory thrashes
Total CPU Page faults: 21010
Total CPU thrashes: 80
==3867== Warning: Some profiling data are not recorded. Make sure cudaProfilerStop() or cuProfilerStop() is called before application exit to flush profile data.
