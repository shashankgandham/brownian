153.349331
==3442== NVPROF is profiling process 3442, command: ./a.out 5 1
==3442== Profiling application: ./a.out 5 1
==3442== Profiling result:
            Type  Time(%)      Time     Calls       Avg       Min       Max  Name
 GPU activities:   44.54%  47.8863s    210000  228.03us  206.98us  413.89us  reduce(point**, point**, int*, int)
                   28.01%  30.1211s    210001  143.43us  141.41us  146.05us  sieve(int, int, int*, int**, int**, point*, point)
                    4.23%  4.55249s    210001  21.678us  20.416us  5.9616ms  d_boxpart(int**, int*, int, point*, point)
                    3.81%  4.09439s    210000  19.497us  15.136us  22.400us  d_update_pos_mpcd(point*, point*, double, point, int)
                    3.05%  3.27945s     21000  156.16us  5.1200us  4.0779ms  d_nbrc(point*, point*, point*, point*, point, int*, int**, int**, int*, int, double, double)
                    2.71%  2.90886s    210000  13.851us  12.735us  513.41us  d_dump(point*, point*, double*, int)
                    2.24%  2.41242s    210000  11.487us  3.6150us  256.67us  d_fluid_colloid_collision(int*, point*, point*, point*, point*, point*, double, double, double, double, point*, point, double, int, double, int**, point**, point**, curandStateXORWOW*)
                    1.43%  1.53705s     21000  73.192us  69.856us  80.607us  d_velfl(point*, point*, int**, int*, point**, point)
                    0.95%  1.02381s    210000  4.8750us  4.6710us  9.5360us  d_update_activity_direction(point*, point*, double, int)
                    0.94%  1.01432s     21000  48.300us  46.432us  53.248us  d_rotate(int*, int**, point*, point*, point, double, double)
                    0.89%  952.64ms     21000  45.363us  26.368us  86.719us  d_velc(point*, point*, int**, int*, int, double, double, double)
                    0.82%  881.74ms    210001  4.1980us  3.5200us  177.02us  d_neighbour_list_mpcd(int**, int*, int**, int**, int*, int**, point*, point*, int, int, int, point)
                    0.78%  835.74ms    210000  3.9790us  3.8390us  12.352us  d_update_pos_md(point*, point*, point*, point*, double, double, point, int)
                    0.72%  771.72ms     21000  36.748us  34.656us  233.31us  d_cellvel(point*, point*, int**, int*, point)
                    0.71%  759.04ms    210000  3.6140us  3.0080us  15.520us  update_fcc(point**, point**, point*, point*, int*, int, double, double, double)
                    0.68%  733.47ms    463002  1.5840us  1.1190us  238.62us  imemset(int*, int)
                    0.67%  721.96ms     21000  34.378us  32.064us  38.848us  d_rotate_mat(point*, point*, point*, point**, int*, int**, int, point, double, double, curandStateXORWOW*)
                    0.60%  642.32ms    210000  3.0580us  2.9440us  8.4160us  d_update_vel_colloid(point*, point*, point*, double, double, int)
                    0.54%  579.53ms     21000  27.596us  25.088us  516.35us  d_cellpart(int**, int*, int, point*, point, point)
                    0.33%  349.54ms    210001  1.6640us  1.5670us  8.4480us  d_compute_force_md(point*, int*, int**, point*, double, double, double, double, double, double, double, double*, point, int)
                    0.28%  303.47ms    210001  1.4450us  1.2470us  16.704us  d_neighbour_list_md(int**, int*, point*, int, double, point)
                    0.22%  237.90ms     21001  11.328us  8.6080us  14.368us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point*, int, add_point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_point>, point*)
                    0.18%  191.70ms    105001  1.8250us  1.6640us  3.4880us  [CUDA memcpy DtoH]
                    0.17%  185.59ms     42001  4.4180us  3.0400us  5.9520us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, thrust::detail::normal_iterator<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_point, point>(int, add_point, thrust::cuda_cub::cub::DeviceReducePolicy<point, int, add_point>::Policy600, point*, point)
                    0.15%  158.84ms     21000  7.5630us  5.7280us  11.360us  void thrust::cuda_cub::cub::DeviceReduceKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, double*, int, add_double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::cub::GridEvenShare<add_double>, double)
                    0.10%  104.01ms     42000  2.4760us  1.6950us  3.5840us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, thrust::cuda_cub::transform_input_iterator_t<double, point*, mod_value>, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double, point*)
                    0.06%  67.185ms     21000  3.1990us  3.0720us  3.6480us  void thrust::cuda_cub::cub::DeviceReduceSingleTileKernel<thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, thrust::detail::normal_iterator<thrust::pointer<double, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>>, int, add_double, double>(int, add_double, thrust::cuda_cub::cub::DeviceReducePolicy<double, int, add_double>::Policy600, double*, double)
                    0.05%  53.160ms     11000  4.8320us  4.6720us  5.3440us  calc_upd(int, int*, int*, point**, point**, point*)
                    0.04%  46.061ms     21000  2.1930us  1.9840us  2.7200us  set_rr(point*, curandStateXORWOW*)
                    0.04%  45.218ms     42001  1.0760us     896ns  2.2080us  void thrust::cuda_cub::core::_kernel_agent<thrust::cuda_cub::__parallel_for::ParallelForAgent<thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>, thrust::cuda_cub::for_each_f<thrust::pointer<point, thrust::cuda_cub::par_t, thrust::use_default, thrust::use_default>, thrust::detail::wrapped_function<thrust::detail::allocator_traits_detail::gozer, void>>, long>(thrust::cuda_cub::par_t, thrust::use_default)
                    0.04%  41.188ms     11000  3.7440us  3.4560us  4.3200us  helper_upd(int, int*, int*, int*, point**, point**, int**, point*, point*, point*, point*, point, double)
                    0.02%  16.617ms         1  16.617ms  16.617ms  16.617ms  d_create_box(int**, point)
                    0.01%  8.8082ms         1  8.8082ms  8.8082ms  8.8082ms  curand_setup(curandStateXORWOW*, int)
                    0.00%  891.90us         1  891.90us  891.90us  891.90us  d_initialize_fluid(point*, point*, point*, int, int, double, double, double, point, curandStateXORWOW*)
                    0.00%  189.28us         1  189.28us  189.28us  189.28us  initialize_colloid(point*, point*, point*, int, double, double, double, double, double, point, curandStateXORWOW*)
                    0.00%  15.040us         1  15.040us  15.040us  15.040us  conserv_mom(point*, point, int)
                    0.00%  4.3200us         1  4.3200us  4.3200us  4.3200us  d_tumble(point*, point*, point, int, curandStateXORWOW*)
      API calls:   34.86%  56.2383s    147002  382.57us  5.8620us  22.997ms  cudaDeviceSynchronize
                   27.68%  44.6591s   3572016  12.502us  5.1620us  8.2959ms  cudaLaunch
                   16.30%  26.2938s    210002  125.21us  9.5090us  59.426ms  cudaMalloc
                   10.94%  17.6412s    210002  84.005us  9.7400us  3.3839ms  cudaFree
                    4.85%  7.82042s  24781093     315ns     127ns  52.092ms  cudaSetupArgument
                    1.76%  2.83612s    105001  27.010us  19.078us  83.578ms  cudaMemcpyAsync
                    1.08%  1.74809s     95750  18.256us  6.5640us  200.73ms  cudaMallocManaged
                    1.06%  1.70864s    252003  6.7800us  2.6120us  1.9739ms  cudaFuncGetAttributes
                    0.81%  1.30482s   3572016     365ns     136ns  813.01us  cudaConfigureCall
                    0.32%  520.76ms    105001  4.9590us  2.9520us  805.22us  cudaStreamSynchronize
                    0.09%  149.94ms     84002  1.7840us     712ns  54.890us  cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags
                    0.08%  132.18ms    126003  1.0490us     431ns  150.42us  cudaGetDevice
                    0.08%  125.72ms    126003     997ns     406ns  172.14us  cudaDeviceGetAttribute
                    0.06%  102.26ms    231004     442ns     125ns  763.03us  cudaPeekAtLastError
                    0.03%  44.745ms    105001     426ns     156ns  618.56us  cudaGetLastError
                    0.00%  396.22us        94  4.2150us     176ns  245.03us  cuDeviceGetAttribute
                    0.00%  171.33us         1  171.33us  171.33us  171.33us  cuDeviceTotalMem
                    0.00%  20.550us         1  20.550us  20.550us  20.550us  cuDeviceGetName
                    0.00%  2.3920us         3     797ns     264ns  1.4960us  cuDeviceGetCount
                    0.00%  1.4290us         2     714ns     361ns  1.0680us  cuDeviceGet

==3442== Unified Memory profiling result:
Device "Tesla V100-SXM2-16GB (0)"
   Count  Avg Size  Min Size  Max Size  Total Size  Total Time  Name
   21081  4.1016KB  4.0000KB  256.00KB  84.44922MB  66.44493ms  Host To Device
   21021  4.0557KB  4.0000KB  60.000KB  83.26172MB  42.58974ms  Device To Host
   21123         -         -         -           -   3.221369s  Gpu page fault groups
      75  4.0000KB  4.0000KB  4.0000KB  300.0000KB           -  Memory thrashes
Total CPU Page faults: 21010
Total CPU thrashes: 75
==3442== Warning: Some profiling data are not recorded. Make sure cudaProfilerStop() or cuProfilerStop() is called before application exit to flush profile data.
